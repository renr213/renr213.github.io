---
title: "Grammar of graphics"
subtitle: "Lecture 2"
date: "January 13, 2025"
format: revealjs
---

# From the survey

-   Almost half of the class mentioned being nervous about coding â€“ you're not alone! ðŸ’™

-   A good number of students mentioned being nervous about being new to stats + data science â€“ you're also not alone! ðŸ’œ

-   Visibility of text on slides: Cranked up font size! ðŸ’›

-   About exams: No coding on the in class (time-limited) exam + there will be practice exams

-   About teams: Peer evaluations + milestones throughout semester

-   Grading criteria: Scale of 0-4 for each exercise on lab + more details in lab instructions

-   Hardware: Code running on university containers

# Toolkit: Version control and collaboration

## Git and GitHub {.smaller}

::::: columns
::: {.column width="50%"}
![](images/git-logo.png){fig-alt="Git logo" fig-align="center" width="150"}

-   Git is a version control system -- like "Track Changes" features from Microsoft Word, on steroids
-   It's not the only version control system, but it's a very popular one
:::

::: {.column width="50%"}
![](images/github-logo.png){fig-alt="GitHub logo" fig-align="center" width="150"}

-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better

-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)
:::
:::::

## Versioning - done badly

![](images/phd_comics_vc.gif){fig-align="center"}

## Versioning - done better

![](images/lego-steps.png){fig-align="center"}

## Versioning - done even better

### with human readable messages

![](images/lego-steps-commit-messages.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-01.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-02.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-03.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-04.png){fig-align="center"}

## Git and GitHub tips {.smaller}

::: incremental
-   There are many many GitHub commands and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.
-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line -- skip that and move on to the next resource unless you feel comfortable trying it out.
-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.
-   If you are really curious about Git and GitHub, let me know. But for this course, the interface between RStudio on the Posit Cloud and GitHub will be sufficient.
:::

## Tour: Git & GitHub

::: demo
**Just one option for now:**

Sit back and enjoy the show!
:::

# Data visualization

## Examining data visualization

[![Source: Twitter](images/female-heights.png)](https://twitter.com/reina_sabah/status/1291509085855260672)

## What makes that a bad visualization? {.smaller}

::: incremental
-   Is the average female Latvian really 4x the height of the average female Indian?
-   The height of the average female is presented as a two-dimensional graphic element. Height is only one dimension.
-   What purpose to the colours serve?
-   Plot title in in a distracting font.
-   It looks like the average Australian, Scot, and Peruvian have exactly the same height. Correct precision of the average?
-   Is this only for adult females?
-   Are the data correct?
:::

## What would be better? {.smaller}

## What would be better? {.smaller}

```{r}
#| echo: false
library(tidyverse)
# Create data
data <- data.frame(
  name=c("Latvia","Australia","Scotland","Peru","South Africa", "India") ,  
  value=c(168.8,161.8,161.3,151.0,159.0,152.0)
  )

# Barplot
ggplot(data, aes(x=name, y=value)) + 
  geom_bar(stat = "identity", width=0.5) + 
  labs(title = "Height of average adult female by country") +
  labs(x = "Country") + 
  labs(y = "Average height (cm)") +
  labs(caption = "based on data from Wikipedia") +
  theme(
    title = element_text(size = 16),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12)
  )

```

These data came from this [Wikipedia page](https://w.wiki/3hVH).

## `ae-02-bechdel-dataviz` {.smaller}

::: appex
-   Click on the link in your email to accept the assignment.
-   Create an new project on Posit.Cloud from your new repository
-   Render, commit, and push your edits by the AE deadline (8:00 am January 20)
:::

## Recap of AE {.smaller}

-   Construct plots with `ggplot()`.
-   Layers of ggplots are separated by `+`s.
-   The formula is (almost) always as follows:

```{r}
#| eval: false

ggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +
  geom_XXX()
```

-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = "pink"`.
-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.
