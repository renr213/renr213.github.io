{
  "hash": "2ec7fdb4dd006485e9f1fd8d0f55ec06",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 08: Data import\"\nsubtitle: \"Suggested answers\"\ncategories: \n  - Application exercise\n  - Answers\n---\n\n\n::: callout-important\nThese are suggested answers.\nThis document should be used as reference only, it's not designed to be an exhaustive key.\n:::\n\n## Packages\n\nWe will use the following two packages in this application exercise.\n\n-   **tidyverse**: For data import, wrangling, and visualization.\n-   **readxl:** For importing data from Excel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n```\n:::\n\n\n# Part 1: Hollywood relationships\n\n-   **Demo:** Load the data from <https://sta199-s24.github.io/data/age_gaps.csv> and assign it to `age_gaps`. Confirm that this new object appears in your Environment tab.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_gaps <- read_csv(\"https://sta199-s24.github.io/data/age_gaps.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1155 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): movie_name, director, actor_1_name, actor_2_name, character_1_gend...\ndbl  (5): release_year, age_difference, couple_number, actor_1_age, actor_2_age\ndate (2): actor_1_birthdate, actor_2_birthdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n-   **Your turn (5 minutes):** Split the data into three -- where woman is older, where man is older, where they are the same age. Save these subsets as two appropriately named data frames. *Remember:* Use concise and evocative names. Confirm that these new objects appear in your Environment tab and that the sum of the number of observations in the two new data frames add to the number of observations in the original data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_gaps <- age_gaps |>\n  mutate(older = case_when(\n    character_1_gender == \"woman\" & actor_1_age > actor_2_age ~ \"woman older\",\n    character_2_gender == \"woman\" & actor_2_age > actor_1_age ~ \"woman older\",\n    character_1_gender == \"man\"   & actor_1_age > actor_2_age ~ \"man older\",\n    character_2_gender == \"man\"   & actor_2_age > actor_1_age ~ \"man older\",\n    actor_1_age == actor_2_age ~ \"same age\"\n    )\n  )\n\nwoman_older <- age_gaps |> filter(older == \"woman older\")\nman_older   <- age_gaps |> filter(older == \"man older\")\nsame_age    <- age_gaps |> filter(older == \"same age\")\n\n(nrow(woman_older) + nrow(man_older) + nrow(same_age)) == nrow(age_gaps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n-   **Demo:** Write out the three new datasets you created into the `data` folder:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(woman_older, file = \"data/woman_older.csv\")\nwrite_csv(man_older, file = \"data/man_older.csv\")\nwrite_csv(same_age, file = \"data/same_age.csv\")\n```\n:::\n\n\n# Part 2: Sales\n\nSales data are stored in an Excel file that looks like the following:\n\n![](https://sta199-s24.github.io/images/sales-excel.png)\n\n-   **Demo:** Read in the Excel file called `sales.xlsx` from the `data-raw/` folder such that it looks like the following.\n\n![](https://sta199-s24.github.io/images/sales-1.png){width=\"200\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_raw <- read_excel(\n  \"data/sales.xlsx\", \n  skip = 3,\n  col_names = c(\"id\", \"n\")\n  )\n```\n:::\n\n\n-   **Demo - Stretch goal:** Manipulate the sales data such such that it looks like the following.\n\n![](https://sta199-s24.github.io/images/sales-2.png){width=\"200\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales <- sales_raw |>\n  mutate(\n    is_brand_name = str_detect(id, \"Brand\"),\n    brand = if_else(is_brand_name, id, NA)\n  ) |>\n  fill(brand) |>\n  filter(!is_brand_name) |>\n  select(brand, id, n)\n\nsales\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  brand   id    n    \n  <chr>   <chr> <chr>\n1 Brand 1 1234  8    \n2 Brand 1 8721  2    \n3 Brand 1 1822  3    \n4 Brand 2 3333  1    \n5 Brand 2 2156  3    \n6 Brand 2 3987  6    \n7 Brand 2 3216  5    \n```\n\n\n:::\n:::\n\n\n-   **Question:** Why should we bother with writing code for reading the data in by skipping columns and assigning variable names as well as cleaning it up in multiple steps instead of opening the Excel file and editing the data in there to prepare it for a clean import?\n\nBecause the code allows us to struggle once and re-use for future datasets and leaves a transparent trail of our modifications while manipulating the data in Excel directly is neither reproducible nor reusable.\n",
    "supporting": [
      "ae-08-data-import-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}