{
  "hash": "3a18949824353b715b64c72d8bbafe7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing various types of data\"\nsubtitle: \"Lecture 3\"\ndate: \"January 23, 2024\"\nformat: revealjs\n---\n\n\n\n# Warm up\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## While you wait...\n\n**Questions from the prepare materials?**\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n# From last time\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n```\n:::\n\n\n\n## Violin plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|4|5|8\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-4-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Multiple geoms\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_point()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-6-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Multiple geoms\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-8-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Multiple geoms + aesthetics\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-10-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Multiple geoms + aesthetics\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"11-13\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Multiple geoms + aesthetics\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"14\"}\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_color_colorblind()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-14-1.png){width=480}\n:::\n:::\n\n\n:::\n\n:::\n\n# Warm up\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## While you wait...\n\n**Questions from the prepare materials?**\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n## Questions from last time {.smaller}\n\n-   **Is there any code in the videos that is not in the readings?** Yes and no.\n    There is no substantial functionality introduced in the videos that is not also in the readings, however the examples in the videos are different than the ones in the reading.\n\n-   **What are all of the `geom`s we need to know?** You don't need to \"memorize\" or even \"know\" all o the geoms available in the ggplot2 package, but you can find a list of them on the [ggplot2 cheat sheet](https://ggplot2.tidyverse.org/#cheatsheet) or on the [reference page](https://ggplot2.tidyverse.org/reference/index.html#geoms).\n\n-   **Could you please clarify what situations it would be appropriate to use each geom function?** Today's topic!\n    And think about it as \"what plot should I make for which type of variable\".\n\n## Announcements\n\n-   AEs this week should be submitted by midnight on Sunday. To \"submit\", commit and push at least once to your `ae` repo for each application exercise this week.\n-   If you email me, please put STA 199 in the subject.\n\n# From last time\n\n## `ae-02-bechdel-dataviz` {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n**If you were in class last Thursday:**\n\n*and followed along with the application exercise...*\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called `ae`.\nIf there are any uncommitted files, commit them so you can start with a clean slate.\n:::\n\n::: {.column width=\"50%\"}\n**If you missed class last Thursday:**\n\n*or didn't follow along with the application exercise...*\n\nGo to the course [GitHub org](https://github.com/sta199-f22-1) and find your `ae` repo.\nClone the repo in your container, open the Quarto document called `ae-02-bechdel`.\n:::\n:::\n\n## Recap of AE {.smaller}\n\n-   Construct plots with `ggplot()`.\n-   Layers of ggplots are separated by `+`s.\n-   The formula is (almost) always as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n```\n:::\n\n\n\n-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = \"pink\"`.\n-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.\n\n# Visualizing various types of data\n\n## Identifying variable types {.smaller}\n\n::: panel-tabset\n## Question\n\n::: poll\nIdentify the type of each of the following variables.\n\n-   Favorite food\n-   Number of classes you’re taking this semester\n-   Zip code\n-   Age\n:::\n\n## Vote\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 500px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n:::\n\n## The way data is displayed matters\n\n::: poll\nWhat do these three plots show?\n:::\n\n![](images/bar-plot-meme.png){fig-align=\"center\"}\n\n::: aside\nSource: [#barbarplots](https://cogtales.wordpress.com/2016/06/06/congratulations-barbarplots/)\n:::\n\n## Visualizing `penguins` {.smaller}\n\n::: columns\n::: {.column width=\"70%\"}\n::: {style=\"font-size: 20px;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   species island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex    year\n   <fct>   <fct>             <dbl>         <dbl>             <int>       <int> <fct> <int>\n 1 Adelie  Torgers…           39.1          18.7               181        3750 male   2007\n 2 Adelie  Torgers…           39.5          17.4               186        3800 fema…  2007\n 3 Adelie  Torgers…           40.3          18                 195        3250 fema…  2007\n 4 Adelie  Torgers…           NA            NA                  NA          NA <NA>   2007\n 5 Adelie  Torgers…           36.7          19.3               193        3450 fema…  2007\n 6 Adelie  Torgers…           39.3          20.6               190        3650 male   2007\n 7 Adelie  Torgers…           38.9          17.8               181        3625 fema…  2007\n 8 Adelie  Torgers…           39.2          19.6               195        4675 male   2007\n 9 Adelie  Torgers…           34.1          18.1               193        3475 <NA>   2007\n10 Adelie  Torgers…           42            20.2               190        4250 <NA>   2007\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n::: {.column width=\"30%\"}\n![](images/penguins.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\nArtwork by \\@allison_horst.\n:::\n\n# Univariate analysis\n\n## Univariate analysis\n\nAnalyzing a single variable:\n\n-   Numerical: histogram, box plot, density plot, etc.\n\n-   Categorical: bar plot, pie chart, etc.\n\n## Histogram - Step 1\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-19-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Histogram - Step 2\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-21-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Histogram - Step 3\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-23-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Histogram - Step 4\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-25-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Histogram - Step 5\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8-12\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  ) +\n  labs(\n    title = \"Weights of penguins\",\n    x = \"Weight (grams)\",\n    y = \"Count\"\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-27-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Boxplot - Step 1\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-29-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Boxplot - Step 2\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-31-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Boxplot - Step 3\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  penguins,\n  aes(y = body_mass_g)\n  ) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-33-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Boxplot - Step 4\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-35-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Boxplot - Step 5\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6-9\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = \"Weight (grams)\",\n    y = NULL\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-37-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 1\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-39-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 2\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-41-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 3\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-43-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 4\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\"\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-45-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 5\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-47-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 6\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\"\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-49-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plot - Step 7\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-51-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Weights of penguins {.smaller}\n\n::: panel-tabset\n## Question\n\n::: task\n::: columns\n::: {.column width=\"70%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-52-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-53-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-54-1.png){width=576}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"30%\"}\nTRUE / FALSE\n\n-   The distribution of penguin weights in this sample is left skewed.\n-   The distribution of penguin weights in this sample is unimodal.\n:::\n:::\n:::\n\n## Vote\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 500px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n:::\n\n# Bivariate analysis\n\n## Bivariate analysis\n\nAnalyzing the relationship between two variables:\n\n-   Numerical + numerical: scatterplot\n\n-   Numerical + categorical: side-by-side box plots, violin plots, etc.\n\n-   Categorical + categorical: stacked bar plots\n\n-   Using an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot\n\n## Side-by-side box plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2|3-6|4|5|8\"}\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    y = species\n    )\n  ) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-56-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|4|5|8\"}\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_density()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-58-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-60-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-62-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n\n## Density plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"12-14\"}\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-visualizing-data_files/figure-revealjs/unnamed-chunk-64-1.png){width=480}\n:::\n:::\n\n\n:::\n:::\n",
    "supporting": [
      "03-visualizing-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}