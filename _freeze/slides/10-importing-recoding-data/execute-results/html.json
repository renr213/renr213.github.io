{
  "hash": "568148d1b1a0143ce4419186bbeb17eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Importing and recoding data\"\nsubtitle: \"Lecture 10\"\ndate: \"January 6, 2025\"\nformat: \n  revealjs:\n    footer: \"[üîó sta199-s24.github.io](https://sta199-s24.github.io/) &nbsp;¬∑&nbsp; [‚ùì Ask on Ed](https://edstem.org/us/courses/50730)\"\n---\n\n\n\n# Warm up\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## While you wait for class to begin...\n\nQuestions from prepare materials?\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n## Announcements\n\n-   If you missed lab yesterday, get in touch with your team ASAP!\n    Read over the team contract they developed and sign it.\n\n-   Start thinking about the datasets you'll include in your proposal.\n\n## Project workflow preview\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/project-repo.png)\n:::\n\n::: {.column width=\"50%\"}\n![](images/project-website.png)\n:::\n:::\n\nand a brief demo!\n\n## Project grading\n\n-   Outlined at <https://sta199-s24.github.io/project/description.html#grading>.\n\n-   Each milestone has points associated with it.\n\n-   Additionally there are points allocated to reproducibility and organization as well as teamwork (to be measured by within team peer evaluations three times throughout the semester).\n\n-   Most important thing you can do today for your project: Block off agreed times in your calendar!\n\n# Reading data into R\n\n## Reading rectangular data\n\n-   Using [**readr**](https://readr.tidyverse.org/):\n    -   Most commonly: `read_csv()`\n    -   Maybe also: `read_tsv()`, `read_delim()`, etc.\n-   Using [**readxl**](https://readxl.tidyverse.org/): `read_excel()`\n-   Using [**googlesheets4**](https://googlesheets4.tidyverse.org/): `read_sheet()` -- We haven't covered this in the videos, but might be useful for your projects\n\n# Reading and writing CSV files\n\n## Age gap in Hollywood relationships {.smaller}\n\n::: columns\n::: {.column width=\"25%\"}\n::: question\nWhat is the story in this visualization?\n:::\n:::\n\n::: {.column width=\"75%\"}\n![](images/hollywood-ages.jpeg){fig-align=\"center\" width=\"600\"}\n:::\n:::\n\n## Application exercise: `ae-08-data-import` {.smaller}\n\n::: appex\n-   Go to the project navigator in RStudio (top right corner of your RStudio window) and open the project called `ae`.\n-   If there are any uncommitted files, commit them, and then click Pull.\n-   Open the file called `ae-08-data-import.qmd` and render it.\n-   Work on Part 1.\n:::\n\n# Reading Excel files\n\n## Sales data\n\n![](https://sta199-s24.github.io/images/sales-excel.png)\n\n. . .\n\n::: question\nAre these data tidy?\nWhy or why not?\n:::\n\n## Sales data\n\n::: question\nWhat \"data moves\" do we need to go from the original, non-tidy data to this, tidy one?\n:::\n\n![](https://sta199-s24.github.io/images/sales-2.png){width=\"150\"}\n\n## Application exercise: `ae-08-data-import` {.smaller}\n\n::: appex\n-   Go back to your project called `ae`.\n-   If there are any uncommitted files, commit them, and push.\n-   Work on Part 2 in `ae-08-data-import.qmd`.\n:::\n\n# Wrap up\n\n## Exams\n\n![](images/exam-1-pass-back.png){fig-align=\"center\" width=\"800\"}\n",
    "supporting": [
      "10-importing-recoding-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}