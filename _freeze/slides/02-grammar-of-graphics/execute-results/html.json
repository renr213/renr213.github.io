{
  "hash": "bfdda69c519fa8ee64a874f238fecee6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of graphics\"\nsubtitle: \"Lecture 2\"\ndate: \"January 18, 2024\"\nformat: revealjs\n---\n\n\n\n\n\n\n# Warm up\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n## While you wait...\n\n**Questions from the prepare materials?**\n\n\n\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n\n\n\n## Announcements\n\n-   Lab 1 on Monday â€“ go to your assigned lab\n-   Catch up with the prepare materials\n\n## From the survey {.smaller}\n\n-   Almost half of the class mentioned being nervous about coding â€“ you're not alone!\n    ðŸ’™\n\n-   A good number of students mentioned being nervous about being new to stats + data science â€“ you're also not alone!\n    ðŸ’œ\n\n-   Visibility of text on slides: Cranked up font size!\n    ðŸ’›\n\n-   About exams: No coding on the in class (time-limited) exam + there will be practice exams\n\n-   About teams: Peer evaluations + milestones throughout semester\n\n-   Grading criteria: Scale of 0-4 for each exercise on lab + more details in lab instructions\n\n-   Hardware: Code running on university containers\n\n# Toolkit: Version control and collaboration\n\n## Git and GitHub {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/git-logo.png){fig-alt=\"Git logo\" fig-align=\"center\" width=\"150\"}\n\n-   Git is a version control system -- like \"Track Changes\" features from Microsoft Word, on steroids\n-   It's not the only version control system, but it's a very popular one\n:::\n\n::: {.column width=\"50%\"}\n![](images/github-logo.png){fig-alt=\"GitHub logo\" fig-align=\"center\" width=\"150\"}\n\n-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better\n\n-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)\n:::\n:::\n\n## Versioning - done badly\n\n![](images/phd_comics_vc.gif){fig-align=\"center\"}\n\n## Versioning - done better\n\n![](images/lego-steps.png){fig-align=\"center\"}\n\n## Versioning - done even better\n\n### with human readable messages\n\n![](images/lego-steps-commit-messages.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-01.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-02.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-03.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/whole-game-04.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\n::: incremental\n-   There are millions of git commands -- ok, that's an exaggeration, but there are a lot of them -- and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\n-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line -- skip that and move on to the next resource unless you feel comfortable trying it out.\n-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.\n:::\n\n## Tour: Git + GitHub\n\n::: demo\n**Just one option for now:**\n\nSit back and enjoy the show!\n:::\n\n# Data visualization\n\n## Examining data visualization {.smaller}\n\n::: columns\n::: {.column width=\"60%\"}\nDiscuss the following for the visualization.\n\n\n\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_e64ab115\" data-update-every=\"1\" tabindex=\"0\" style=\"bottom:0;left:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n:::\n\n::: {.column width=\"40%\"}\n![Source: [Twitter](https://twitter.com/reina_sabah/status/1291509085855260672)](images/female-heights.png){fig-align=\"center\"}\n:::\n:::\n\n## `ae-02-bechdel-dataviz` {.smaller}\n\n::: appex\n-   Go to the course [GitHub org](https://github.com/sta199-f22-1) and find your `ae` repo (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline (end of this week)\n:::\n\n## Recap of AE {.smaller}\n\n-   Construct plots with `ggplot()`.\n-   Layers of ggplots are separated by `+`s.\n-   The formula is (almost) always as follows:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n```\n:::\n\n\n\n\n\n\n-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = \"pink\"`.\n-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.\n",
    "supporting": [
      "02-grammar-of-graphics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}