{
  "hash": "450d38419892bb6a9c28d0bf37b29255",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear regression with a multiple predictors II\"\nsubtitle: \"Lecture 17\"\ndate: \"January 6, 2025\"\nformat: \n  revealjs:\n    footer: \"[üîó renr213.github.io](https://renr213.github.io/) &nbsp;¬∑&nbsp; [‚ùì Ask on Ed](https://edstem.org/us/courses/68653)\"\n---\n\n\n\n# Warm up\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## While you wait for class to begin...\n\n::: nonincremental\nAny questions from prepare materials?\n:::\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n## Project proposals\n\n::: task\nAny questions?\n:::\n\n# From last time\n\n## Application exercise: `ae-12-modeling-penguins-multi` {.smaller}\n\n::: appex\nContinue work on `ae-12-modeling-penguins-multi.qmd`.\n:::\n\n**Goals:**\n\n-   Recap modeling with a single predictor\n-   Fit and interpret models with multiple predictors\n-   Distinguish between additive and interaction models\n\n# Model selection and overfitting\n\n## Goals\n\n-   Review prediction and interpretation of model results\n-   Review main and interaction effects models\n-   Discuss model selection further\n\n## Application exercise: `ae-13-modeling-loans` {.smaller}\n\n::: appex\n-   Go to your project called `ae`.\n-   If there are any uncommitted files, commit them, and push.\n-   Work on `ae-13-modeling-loans.qmd`.\n:::\n",
    "supporting": [
      "17-linear-model-multiple-predictors-II_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}