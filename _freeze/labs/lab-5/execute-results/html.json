{
  "hash": "21a9493613e723aac7f6e4877dfb7a2e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 5 - Potpourri\"\ncategories: \"Lab\"\n---\n\n\n\n\n\n\n# Introduction\n\nIn this lab you'll review and get practice with a variety of concepts, methods, and tools you've encountered thus far.\n\n# Part 1 - All about Quarto\n\n## Question 1\n\na.  Add each of strings below to the code chunk provided in your document, render the document, and determine if the string is a proper code chunk label.\n    If not, explain why and describe how you could fix it so the document renders.\n\n    -   Chunk label 1:\n\n    ```         \n    #| label: a-label \n    #| with-a-line-break\n    ```\n\n    -   Chunk label 2:\n\n    ```         \n    #| label: areaaaaaaaaaaaaaaaaaaaaaallllllllllllllllllyyyyylooooooooooooooooooonglabel \n    ```\n\n    -   Chunk label 3:\n\n    ```         \n    #| label: label with spaces\n    ```\n\n    -   Chunk label 4:\n\n    ```         \n    #| label: label-with-dashes\n    ```\n\n    ::: callout-tip\n    Try each label option in the code chunk provided in your document.\n    If it gives you an error (document doesn't render), you know it's not a proper chunk label.\n    :::\n\nb.  Which of the chunk label options above is the best option?\n    Explain your reasoning in 1-2 sentences.\n\n## Question 2\n\nYou have the following code chunk:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n```\n:::\n\n\n\n\nAdd the following code chunk options, one at a time, and set each to `false` and then to `true`.\nAfter each value, render your document and observe its effect.\nUltimately, choose the values that are the most appropriate for this code chunk.\nBased on the behaviors you observe, describe what each code chunk option does.\n\n-   `echo`\n-   `warning`\n-   `eval`\n\n## Question 3\n\na.  You have the following code chunk again.\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n      geom_point()\n    ```\n    :::\n\n\n\n\n    Add `fig-width` and `fig-asp` as code chunk options.\n    Try setting `fig-width` to values between 1 and 10.\n    Try setting `fig-asp` to values between 0.1 and 1.\n    Re-render the document after each value and observe its effect.\n    Ultimately, choose values that make the plot look visually pleasing in the rendered document.\n    Based on the behavior you observe, describe what each chunk option does.\n\nb.  You have the following code chunk, but look carefully, it's not exactly the same!\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    gplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n      geom_point()\n    ```\n    :::\n\n\n\n\n    Add `error` as a code chunk option and set it to `false` and then set it to `true`.\n    After each value, render your document and observe its effect.\n    Ultimately, choose the value that allows you to render your document without altering the code.\n    Based on the behavior you observe, describe what this code chunk option does.\n\n::: callout-tip\nReading [the documentation](https://quarto.org/docs/reference/formats/pdf.html#execution) might also be hepful.\n:::\n\n::: render-commit-push\nRender, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\n<br>\n:::\n\n# Part 2 - Misrepresentation\n\n## Question 4\n\nThe following chart was [shared](https://twitter.com/GraphCrimes/status/1566264004288331776) by \\@GraphCrimes on X/Twitter on September 3, 2022.\n\n![](images/private-sector.png){fig-align=\"center\"}\n\na.  What is misleading about this graph?\nb.  Suppose you wanted to recreate this plot, with improvements to avoid its misleading pitfalls from part (a). You would obviously need the data from the survey in order to be able to do that. How many observations would this data have? How many variables (at least) should it have, and what should those variables be?\nc.  Load the data for this survey from `data/survation.csv`. Confirm that the data match the percentages from the visualization. That is, calculate the percentages of public sector, private sector, don't know for each of the services and check that they match the percentages from the plot.\n\n## Question 5\n\nCreate an improved version of the visualization.\nYour improved visualization:\n\n-   should also be a stacked bar chart with services on the y-axis, presented in the same order as the original plot, and services to create the segments of the plot, and presented in the same order as the original plot\n\n-   should have the same legend location\n\n-   should have the same title and caption\n\n-   does not need to have a bolded title or a gray background\n\nHow does the improved visualization look different than the original?\nDoes it send a different message at a first glance?\n\n::: callout-tip\nUse `\\n` to add a line break to your title.\nAnd note that since the title is very long, it might run off the page in your code.\nThat's ok!\n\nAdditionally, the colors used in the plot are `gray`, `#FF3205`, and `#006697`.\n:::\n\n::: render-commit-push\nRender, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\n<br>\n:::\n\n# Part 3 - DatasauRus\n\nThe data frame you will be working with in this part is called `datasaurus_dozen` and it's in the **datasauRus** package.\nThis single data frame contains 13 datasets, designed to show us why data visualization is important and how summary statistics alone can be misleading.\nThe different datasets are marked by the `dataset` variable, as shown in @fig-datasaurus.\n\n![The \\`datasaurus_dozen\\` data frame stacks 13 datasets on top of each other. This figure shows the first three datasets.](images/datasaurus-dozen.png){#fig-datasaurus fig-align=\"center\" width=\"432\"}\n\n::: callout-note\nIf it's confusing that the data frame is called `datasaurus_dozen` when it contains 13 datasets, you're not alone!\nHave you heard of a [baker's dozen](https://www.mentalfloss.com/article/32259/why-bakers-dozen-13)?\n:::\n\nHere is a peek at the top 10 rows of the dataset:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasaurus_dozen\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,846 × 3\n   dataset     x     y\n   <chr>   <dbl> <dbl>\n 1 dino     55.4  97.2\n 2 dino     51.5  96.0\n 3 dino     46.2  94.5\n 4 dino     42.8  91.4\n 5 dino     40.8  88.3\n 6 dino     38.7  84.9\n 7 dino     35.6  79.9\n 8 dino     33.1  77.6\n 9 dino     29.0  74.5\n10 dino     26.2  71.4\n# ℹ 1,836 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Question 6\n\nIn a single pipeline, calculate the mean of `x`, mean of `y`, standard deviation of `x`, standard deviation of `y`, and the correlation between `x` and `y` for each level of the `dataset` variable.\nThen, in 1-2 sentences, comment on how these summary statistics compare across groups (datasets).\n\n::: callout-tip\nThere are 13 groups but `tibble`s only print out 10 rows by default.\nAdd `print(n = 13)` as the last step of your pipeline to display all rows.\n:::\n\n## Question 7\n\nCreate a scatterplot of `y` versus `x` and color and facet it by `dataset`.\nThen, in 1-2 sentences, how these plots compare across groups (datasets).\nHow does your response in this question compare to your response to the previous question and what does this say about using visualizations and summary statistics when getting to know a dataset?\n\n::: callout-tip\nWhen you both color and facet by the same variable, you'll end up with a redundant legend.\nTurn off the legend by adding `show.legend = FALSE` to the geom creating the legend.\n:::\n\n::: render-commit-push\nRender, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\n<br>\n:::\n\n# Part 4 - Election polling\n\nSurveyUSA polled 1,500 US adults between January 31, 2024 and February 2, 2024.\nOf the 1,500 adults, 1,259 were identified by SurveyUSA as being registered to vote, and of these 1,048 were found to be likely to vote in the 2024 November election for President.[^1]\nThe following question was asked to these 1,048 adults:\n\n[^1]: Full survey results can be found at <https://www.surveyusa.com/client/PollReport.aspx?g=300d50f5-303b-4652-b59e-6fbf1b87e24a>.\n\n> 1,048 were found to be likely to vote in the 2024 November election for President and were asked the substantive questions which follow.\n\nResponses were broken down into the following categories:\n\n| Variable | Levels                                     |\n|:---------|:-------------------------------------------|\n| Age      | 18-49; 50+                                 |\n| Vote     | Donald Trump (R); Joe Biden (D); Undecided |\n\nOf the 1,048 responses, 507 were between the ages of 18-49.\nOf the individuals that are between 18-49, 238 individuals responded that they would vote for Donald Trump, 237 said they would vote for Joe Biden, and the remainder were undecided.\nOf the individuals that are 50+, 271 individuals responded that they would vote for Donald Trump, 228 said they would vote for Joe Biden, and the remainder were undecided.\n\n## Question 8\n\na.  Fill in the code below to create a two-way table that summarizes these data.\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    survey_counts <- tibble( \n      age = c(),\n      vote = c(),\n      n = c()\n      )\n    \n    survey_counts |>\n      pivot_wider( \n        names_from = ___,\n        values_from = ___\n      ) |>\n      kable()\n    ```\n    :::\n\n\n\n\nFor parts b-d below, use a your response single pipeline starting with `survey_counts`, calculate the desired proportions, and make sure the result is an **ungrouped** data frame with a column for relevant counts, a column for relevant proportions, and a column for the groups you're interested in.\n\nb.  Calculate the proportions of 18-49 year olds and 50+ year olds in this sample.\n\nc.  Calculate the proportions of those who want to vote for Donald Trump, Joe Biden, and those who are undecided in this sample.\n\nd.  Calculate the proportions of individuals in this sample who are planning to vote for each of the candidates or are undecided among those who are 18-49 years old as well as among those who are 50+ years old.\n\n## Question 9\n\na.  Re-create the following visualization that displays relationship between `age` and `vote`.\n\n    ![](images/surveyusa-trump-biden.png){width=\"500\"}\n\n    ::: callout-tip\n    The colors used in the plot are `\"#E81B23\"`, `\"#0015BC\"`, and `\"gray\"`.\n    The theme is `theme_minimal()`.\n    :::\n\nb.  Based on your calculations so far, as well as your visualization, write 1-3 sentences that describe the relationship, in this sample, between age and plans for presidential vote.\n\n::: render-commit-push\nRender, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\n<br>\n:::\n\n# Part 5 - Ethics\n\n## Question 10\n\nTo complete this exercise you will first need to watch the documentary Coded Bias.\nTo do so, you either need to be on the Duke network or connected to the Duke VPN. Then go to <https://find.library.duke.edu/catalog/DUKE009834953> and click on \"View Online\".\nOnce you watch the video, write a reflection in 2-5 bullet points highlighting at least one thing that you already knew about (from the course prep materials) and at least one thing you learned from the movie as well as any other aspects of the documentary that you found interesting / enlightening.\n\n::: callout-important\nThis question requires no code, only narrative.\nRemember that, based on the [syllabus](https://sta199-s24.github.io/course-syllabus.html#academic-honesty), you may not use generative AI tools (e.g., Chat GPT) to write narrative on assignments.\n:::\n\n::: render-commit-push\nRender, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n:::\n\n# Wrap-up\n\n## Submission\n\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n::: callout-warning\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo.\nWe will be checking these to make sure you have been practicing how to commit and push changes.\n\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered \"on time\".\n:::\n\nTo submit your assignment:\n\n-   Go to <http://www.gradescope.com> and click *Log in* in the top right corner.\n-   Click *School Credentials* $\\rightarrow$ *Duke NetID* and log in using your NetID credentials.\n-   Click on your *STA 199* course.\n-   Click on the assignment, and you'll be prompted to submit it.\n-   Mark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be \"checked\").\n\n::: callout-important\n## Checklist\n\nMake sure you have:\n\n-   attempted all questions\n-   rendered your Quarto document\n-   committed and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\n-   uploaded your PDF to Gradescope\n-   selected pages associated with each question on Gradescope\n:::\n\n## Grading\n\nThe lab is graded out of a total of 50 points.\n\nYou can earn up to 5 points on each question:\n\n-   5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n\n-   4: Response shows good understanding and addresses most of the rubric items.\n\n-   3: Response shows understanding and addresses a majority of the rubric items.\n\n-   2: Response shows effort and misses many of the rubric items.\n\n-   1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n\n-   0: No attempt.\n",
    "supporting": [
      "lab-5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}